plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
    id "net.ltgt.apt-idea" version "0.21"
}

version "0.1"
group "be.drissamri"

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    developmentOnly
}

dependencies {
    compile enforcedPlatform('io.micronaut:micronaut-bom:1.1.0.RC2')
    annotationProcessor "io.micronaut:micronaut-inject-java:1.1.0.RC2"
    annotationProcessor "io.micronaut:micronaut-validation:1.1.0.RC2"

    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-function-aws"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "com.amazonaws:aws-lambda-java-log4j2:1.0.0"
    runtime "org.apache.logging.log4j:log4j-slf4j-impl:2.9.1"

    // AWS SDK 2.0
    compile group: 'software.amazon.awssdk', name: 'dynamodb', version: "2.5.21"
    compile group: 'software.amazon.awssdk', name: 'url-connection-client', version: "2.5.21"

    testAnnotationProcessor "io.micronaut:micronaut-inject-java:1.1.0.RC2"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "io.micronaut.test:micronaut-test-junit5"
    testCompile "io.micronaut:micronaut-function-client"
    testCompile "io.micronaut:micronaut-inject-java"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
    testRuntime "io.micronaut:micronaut-http-server-netty"
    testRuntime "io.micronaut:micronaut-function-web"
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
test.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
shadowJar {
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
mainClassName = "be.drissamri.PingFunction"
applicationDefaultJvmArgs = [""]

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}